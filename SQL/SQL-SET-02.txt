
1)Write a valid SQL statement that calculates the total weight of all corn cobs that were picked from the garden:

mysql> select sum(p.weight) from picked p join plant pl on p.plantfk = pl.plantid where pl.name = "corn";
+---------------+
| sum(p.weight) |
+---------------+
|         17.54 |
+---------------+
1 row in set (0.00 sec)

***************************************************************************************************

2)For some reason Erin has change his location for picking the tomato to North. Write the corresponding query.

mysql> update picked set locationfk = (select locationid from location where lower(name)='north') where gardenerfk in (select g.gardenerid from gardener g where lower(g.name)='erin') and plantfk in (select p.plantid from plant p where lower(p.name)='tomato');
Query OK, 1 row affected (1.85 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from picked;
+---------+------------+------------+------------+--------+--------+
| plantFK | gardenerFK | locationFK | date1      | amount | weight |
+---------+------------+------------+------------+--------+--------+
|       0 |          2 |          0 | 2012-08-18 |     28 |   2.32 |
|       0 |          3 |          1 | 2012-08-16 |     12 |   1.02 |
|       2 |          1 |          3 | 2012-08-22 |     52 |  12.96 |
|       2 |          2 |          2 | 2012-08-28 |     18 |   4.58 |
|       3 |          3 |          1 | 2012-08-22 |     15 |   3.84 |
|       4 |          2 |          0 | 2012-07-16 |     23 |   0.52 |
+---------+------------+------------+------------+--------+--------+
6 rows in set (0.00 sec)

***************************************************************************************************

3)Insert a new column 'Exper' of type Number (30) to the 'gardener' table which stores Experience of the of person. How will you modify this to varchar2(30).

mysql> alter table gardener add column exper integer(30);
Query OK, 0 rows affected (1.38 sec)

mysql> alter table gardener modify column exper varchar(20);
Query OK, 4 rows affected (2.16 sec)

mysql> desc gardener;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| gardenerid | int(11)     | NO   | PRI | NULL    |       |
| name       | varchar(30) | YES  |     | NULL    |       |
| age        | int(11)     | YES  |     | NULL    |       |
| exper      | varchar(20) | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
4 rows in set (0.12 sec)

mysql> select * from gardener;
+------------+--------+------+-------+
| gardenerid | name   | age  | exper |
+------------+--------+------+-------+
|          0 | Mother |   36 | NULL  |
|          1 | Father |   38 | NULL  |
|          2 | Tim    |   15 | NULL  |
|          3 | Erin   |   12 | NULL  |
+------------+--------+------+-------+
4 rows in set (0.00 sec)

***************************************************************************************************

4)Write a query to find the plant name which required seeds less than 20 which plant on 14-APR

mysql> select p.name from planted pl inner join plant p on p.plantid=pl.plantfk where pl.seeds<20 and month(date1)=4 and day(date1)=14;
+--------+
| name   |
+--------+
| Carrot |
+--------+
1 row in set (0.02 sec)

***************************************************************************************************

5)List the amount of sunlight and water to all plants with names that start with letter 'c' or letter 'r'.

mysql> select sunlight,water from plant where name like "C%" or name like "R%";
+----------+-------+
| sunlight | water |
+----------+-------+
|     0.26 |  0.82 |
|     0.44 |  0.76 |
|     0.28 |  0.84 |
+----------+-------+
3 rows in set (0.00 sec)


***************************************************************************************************

6)Write a valid SQL statement that displays the plant name and the total amount of seed required for each plant that were plant in the garden. The output should be in descending order of plant name.

mysql> select name, sum(seeds)
    -> from plant p
    -> inner join planted pl on p.plantid = pl.plantfk
    -> group by p.plantid
    -> order by name desc;
+---------+------------+
| name    | sum(seeds) |
+---------+------------+
| Tomato  |         38 |
| Radish  |         30 |
| Lettuce |         30 |
| Corn    |         32 |
| Carrot  |         42 |
| Beet    |         36 |
+---------+------------+
6 rows in set (0.20 sec)

***************************************************************************************************

7)Write a valid SQL statement that calculates the average number of items produced per seed planted for each plant type:( (Average Number of Items = Total Amount Picked / Total Seeds Planted.)

mysql> select sum(amount)/sum(seeds) as avg_no_of_items
    -> from picked p1
    -> inner join planted p2 on p1.plantfk = p2.plantfk
    -> group by p1.plantfk;
+-----------------+
| avg_no_of_items |
+-----------------+
|          0.9524 |
|          2.1875 |
|          0.3947 |
|          0.7667 |
+-----------------+
4 rows in set (0.09 sec)

***************************************************************************************************

8)Write a valid SQL statement that would produce a result set like the following:

 name |  name  |    date    | amount 
------|--------|------------|-------- 
 Tim  | Radish | 2012-07-16 |     23 
 Tim  | Carrot | 2012-08-18 |     28 
Find out persons who picked from the same location as he/she planted.

mysql> select g.name,p.name,pi.date1,pi.amount from picked pi left outer join plant p on p.plantid=pi.plantfk left outer join location l on l.locationid=pi.locationfk left outer join gardener g on g.gardenerid=pi.gardenerfk where l.name='East' and g.name='Tim';
+------+--------+------------+--------+
| name | name   | date1      | amount |
+------+--------+------------+--------+
| Tim  | Carrot | 2012-08-18 |     28 |
| Tim  | Radish | 2012-07-16 |     23 |
+------+--------+------------+--------+
2 rows in set (0.03 sec)

***************************************************************************************************

9)Create a view that lists all the plant names picked from all locations except ’West’ in the month of August.

mysql> select g.name from planted pl 
    -> left outer join picked p on p.gardenerfk=pl.gardenerfk left outer join gardener g on g.gardenerid=p.gardenerfk
    -> where pl.locationfk=p.locationfk group by g.name;
+--------+
| name   |
+--------+
| Tim    |
| Father |
| Erin   |
+--------+
3 rows in set (0.00 sec)
***************************************************************************************************

10)

mysql> create view plants_picked as select p.name from plant p left outer join picked pi on p.plantid=pi.plantfk left outer join location l on pi.locationfk=l.locationid where l.name!='West' and month(pi.date1)!=8;
Query OK, 0 rows affected (0.13 sec)

mysql> select * from plants_picked;
+--------+
| name   |
+--------+
| Radish |
+--------+
1 row in set (0.14 sec)
