1) List full details of all hotels.

mysql> select * from hotel;
+----------+------------------+----------+
| hotel_no | name             | city     |
+----------+------------------+----------+
| H111     | EMPIRE HOTEL     | NEW YORK |
| H235     | PARK PALACE      | NEW YORK |
| H432     | BROWNSTONE HOTEL | TORONTO  |
| H498     | JAMES PLAZA      | TORONTO  |
| H193     | DEVON HOTEL      | BOSTON   |
| H437     | CLAIRMONT HOTEL  | BOSTON   |
+----------+------------------+----------+
6 rows in set (0.00 sec)

***************************************************************************************************

2)List full details of all hotels in New York.

mysql> select * from hotel where city="NEW YORK";
+----------+--------------+----------+
| hotel_no | name         | city     |
+----------+--------------+----------+
| H111     | EMPIRE HOTEL | NEW YORK |
| H235     | PARK PALACE  | NEW YORK |
+----------+--------------+----------+
2 rows in set (0.00 sec)

***************************************************************************************************

3)List the names and cities of all guests, ordered according to their cities.

mysql> select name, city from guest order by city;
+---------------+--------------+
| name          | city         |
+---------------+--------------+
| Robert Swift  | Atlanta      |
| Tata Cumming  | Baltimore    |
| Edward Cane   | Baltimore    |
| Tom Hancock   | Philadelphia |
| Adam Wayne    | Pittsburgh   |
| Vanessa Parry | Pittsburgh   |
+---------------+--------------+
6 rows in set (0.00 sec)

***************************************************************************************************

4)List all details for non-smoking rooms in ascending order of price.

mysql> select * from room where type="N" order by price;
+---------+----------+------+-------+
| room_no | hotel_no | type | price |
+---------+----------+------+-------+
|     257 | H437     | N    |   140 |
|     412 | H111     | N    |   145 |
|     223 | H437     | N    |   155 |
|     345 | H498     | N    |   160 |
|    1267 | H235     | N    |   175 |
|    1201 | H193     | N    |   175 |
|     467 | H498     | N    |   180 |
|    1289 | H235     | N    |   195 |
+---------+----------+------+-------+
8 rows in set (0.00 sec)

***************************************************************************************************

5)List the number of hotels there are.

+-----------------+
| number_of_hotel |
+-----------------+
|               6 |
+-----------------+
1 row in set (0.00 sec)

***************************************************************************************************

6)List the cities in which guests live. Each city should be listed only once.

mysql> select distinct(city) from guest;
+--------------+
| city         |
+--------------+
| Pittsburgh   |
| Baltimore    |
| Philadelphia |
| Atlanta      |
+--------------+
4 rows in set (0.00 sec)

***************************************************************************************************

7)List the average price of a room.

mysql> select avg(price) from room;
+------------+
| avg(price) |
+------------+
|   155.6667 |
+------------+
1 row in set (0.00 sec)

***************************************************************************************************

8)List hotel names, their room numbers, and the type of that room.

mysql> select name, room_no, type from hotel h,room r where h.hotel_no=r.hotel_no;
+------------------+---------+------+
| name             | room_no | type |
+------------------+---------+------+
| EMPIRE HOTEL     |     313 | S    |
| EMPIRE HOTEL     |     412 | N    |
| PARK PALACE      |    1267 | N    |
| PARK PALACE      |    1289 | N    |
| BROWNSTONE HOTEL |     876 | S    |
| BROWNSTONE HOTEL |     898 | S    |
| JAMES PLAZA      |     345 | N    |
| JAMES PLAZA      |     467 | N    |
| DEVON HOTEL      |    1001 | S    |
| DEVON HOTEL      |    1201 | N    |
| CLAIRMONT HOTEL  |     257 | N    |
| CLAIRMONT HOTEL  |     223 | N    |
+------------------+---------+------+
12 rows in set (0.00 sec)

***************************************************************************************************

9)List the hotel names, booking dates, and room numbers for all hotels in New York.

mysql> select name, date_from, date_to,r.room_no from hotel h join booking b
    -> on h.hotel_no = b.hotel_no
    -> join room r on b.room_no = r.room_no where city = "NEW YORK";
+--------------+-----------+-----------+---------+
| name         | date_from | date_to   | room_no |
+--------------+-----------+-----------+---------+
| EMPIRE HOTEL | 10-AUG-99 | 15-AUG-99 |     412 |
| EMPIRE HOTEL | 18-AUG-99 | 21-AUG-99 |     412 |
| PARK PALACE  | 05-SEP-99 | 12-SEP-99 |    1267 |
+--------------+-----------+-----------+---------+
3 rows in set (0.00 sec)

***************************************************************************************************

10)What is the number of bookings that started in the month of September?

mysql> select count(*) as booking from booking where date_from like "%SEP%";
+---------+
| booking |
+---------+
|       4 |
+---------+
1 row in set (0.00 sec)

***************************************************************************************************

11)List the names and cities of guests who began a stay in New York in August.

mysql> select g.name,g.city from guest g join booking b on g.guest_no = b.guest_no
    -> join hotel h on b.hotel_no = h.hotel_no
    -> where h.city = "NEW YORK" and date_from like "%AUG%";
+--------------+------------+
| name         | city       |
+--------------+------------+
| Adam Wayne   | Pittsburgh |
| Tata Cumming | Baltimore  |
+--------------+------------+
2 rows in set (0.04 sec)

***************************************************************************************************

12)List the hotel names and room numbers of any hotel rooms that have not been booked.

mysql> select name, r.room_no from hotel h join room r on h.hotel_no = r.hotel_no where r.room_no not in (select room_no from booking);
+------------------+---------+
| name             | room_no |
+------------------+---------+
| EMPIRE HOTEL     |     313 |
| PARK PALACE      |    1289 |
| BROWNSTONE HOTEL |     876 |
| BROWNSTONE HOTEL |     898 |
| CLAIRMONT HOTEL  |     257 |
+------------------+---------+
5 rows in set (0.00 sec)

***************************************************************************************************

13)List the hotel name and city of the hotel with the highest priced room.

mysql> select name, city from hotel h join room r on h.hotel_no = r.hotel_no where price in (select max(price) from room);
+-------------+----------+
| name        | city     |
+-------------+----------+
| PARK PALACE | NEW YORK |
+-------------+----------+
1 row in set (0.03 sec)

***************************************************************************************************

14)List hotel names, room numbers, cities, and prices for hotels that have rooms with prices lower than the lowest priced room in a Boston hotel.

mysql> select name, r.room_no, city, price from hotel h join room r on h.hotel_no = r.hotel_no where price < (select min(price) from room r join hotel h on h.hotel_no = r.hotel_no where city = "BOSTON");
+------------------+---------+---------+-------+
| name             | room_no | city    | price |
+------------------+---------+---------+-------+
| BROWNSTONE HOTEL |     876 | TORONTO |   124 |
| BROWNSTONE HOTEL |     898 | TORONTO |   124 |
+------------------+---------+---------+-------+
2 rows in set (0.05 sec)

***************************************************************************************************

15)List the average price of a room grouped by city.

mysql> select avg(price) as avg_price from room r join hotel h on r.hotel_no = h.hotel_no group by city;
+-----------+
| avg_price |
+-----------+
|  165.0000 |
|  147.0000 |
|  155.0000 |
+-----------+
3 rows in set (0.00 sec)

***************************************************************************************************
